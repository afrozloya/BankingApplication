plugins {
	id 'org.springframework.boot' version '2.7.2'
	id 'io.spring.dependency-management' version '1.0.12.RELEASE'
	id 'java'
	id 'jacoco'
}

plugins {
	id "org.sonarqube" version "3.4.0.2513"
}

group = 'com.banking'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springdoc:springdoc-openapi-ui:1.6.9'
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	testImplementation "org.springframework.boot:spring-boot-starter-test"
	implementation 'junit:junit:4.13.2'
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'io.projectreactor:reactor-test'
}

tasks.named('test') {
	useJUnitPlatform()
}

jacoco {
	toolVersion = "0.8.2"
}

test.finalizedBy(project.tasks.jacocoTestReport)

jacocoTestReport {
	dependsOn test
	reports {
		xml.enabled true
		csv.enabled false
	}
	afterEvaluate {
		classDirectories.setFrom(files(classDirectories.files.collect {
			fileTree(dir: it, exclude: [
					"com.banking.bankingapi/configs/**",
					"com.banking.bankingapi/models/**",
					"com.banking.bankingapi/dto/**",
					"**/JwtSpringSecurityFilter.*",
					"**/PrePopulateData.*"
			])
		}))
	}
}
